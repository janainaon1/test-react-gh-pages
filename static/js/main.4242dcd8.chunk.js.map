{"version":3,"sources":["assets/logo.svg","pages/Home/index.tsx","services/api.ts","components/Dropzone/index.tsx","pages/CreatePoint/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["module","exports","Home","id","className","src","logo","alt","to","api","axios","create","baseURL","Dropzone","onFileUploaded","useState","selectedFileUrl","setSelectedFileUrl","onDrop","useCallback","acceptedFiles","file","fileUrl","URL","createObjectURL","useDropzone","accept","getRootProps","getInputProps","CreatePoint","items","setItems","ufs","setUfs","cities","setCities","initialPosition","setInitialPosition","name","email","whatsapp","formData","setFormData","selectedUf","setSelectedUf","selectedCity","setSelectedCity","selectedItems","setSelectedItems","selectedPosition","setSelectedPosition","selectedFile","setSelectedFile","history","useHistory","handleInputChange","event","target","value","a","preventDefault","uf","city","latitude","longitude","data","FormData","append","String","join","post","alert","push","useEffect","navigator","geolocation","getCurrentPosition","position","coords","get","then","response","ufInitials","map","sigla","cityNames","nome","onSubmit","htmlFor","type","onChange","Map","center","zoom","onclick","latlng","lat","lng","TileLayer","attribution","url","Marker","disabled","key","item","onClick","findIndex","filteredItems","filter","handleSelectItem","includes","image_url","title","Routes","component","path","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4242dcd8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.47c4581a.svg\";","import React from 'react';\r\nimport { FiLogIn } from \"react-icons/fi\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './styles.css';\r\nimport logo from '../../assets/logo.svg'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div id=\"page-home\">\r\n            <div className=\"content\">\r\n                <header>\r\n                    <img src={logo} alt=\"Ecoleta\"></img>\r\n                </header>\r\n\r\n                <main>\r\n                    <h1>Seu marketplace de coleta de res√≠duos.</h1>\r\n                    <p>Ajudamos pessoas a encontrarem pontos de coleta de forma eficiente.</p>\r\n\r\n                    <Link to=\"/create-point\">\r\n                        <span>\r\n                            <FiLogIn />\r\n                        </span>\r\n                        <strong>Cadastre um ponto de coleta</strong>\r\n                    </Link>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:3333/'\r\n});\r\n\r\nexport default api;","import React, { useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { FiUpload } from 'react-icons/fi';\r\n\r\nimport './style.css';\r\n\r\ninterface Props {\r\n    onFileUploaded: (file: File) => void;\r\n}\r\n\r\nconst Dropzone: React.FC<Props> = ({ onFileUploaded }) => {\r\n    const [selectedFileUrl, setSelectedFileUrl ] = useState('');\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        const file = acceptedFiles[0];\r\n\r\n        const fileUrl = URL.createObjectURL(file);\r\n\r\n        setSelectedFileUrl(fileUrl);\r\n        onFileUploaded(file);\r\n    }, [onFileUploaded]);\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({ \r\n        onDrop,\r\n        accept: 'image/*'\r\n    })\r\n\r\n    return (\r\n        <div className=\"dropzone\" {...getRootProps()}>\r\n            <input {...getInputProps()} accept=\"image/*\" />\r\n\r\n            { selectedFileUrl \r\n                ? <img src={selectedFileUrl} alt=\"Point thumbnail\" />                \r\n                : (\r\n                    <p>\r\n                        <FiUpload />\r\n                        Imagem do estabelecimento\r\n                    </p>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropzone;","import React, { useEffect, useState, ChangeEvent, FormEvent } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\nimport { Map, TileLayer, Marker } from 'react-leaflet';\r\nimport axios from 'axios';\r\nimport { LeafletMouseEvent } from 'leaflet';\r\nimport api from '../../services/api'; \r\nimport Dropzone from '../../components/Dropzone';\r\n\r\nimport './styles.css';\r\n\r\nimport logo from '../../assets/logo.svg';\r\n\r\ninterface Item {\r\n    id: number,\r\n    title: string,\r\n    image_url: string\r\n}\r\n\r\ninterface IBGEUFResponse {\r\n    sigla: string;\r\n}\r\n\r\ninterface IBGECityResponse {\r\n    nome: string;\r\n}\r\n\r\nconst CreatePoint = () => {\r\n\r\n    const [items, setItems] = useState<Item[]>([]);\r\n    const [ufs, setUfs] = useState<string[]>([]);\r\n    const [cities, setCities] = useState<string[]>([]);\r\n\r\n    const [initialPosition, setInitialPosition] = useState<[number, number]>([0,0]);\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        whatsapp: '',\r\n    });\r\n\r\n    const [selectedUf, setSelectedUf] = useState('0');\r\n    const [selectedCity, setSelectedCity] = useState('0');\r\n    const [selectedItems, setSelectedItems] = useState<number[]>([]);\r\n    const [selectedPosition, setSelectedPosition] = useState<[number, number]>([0,0]);\r\n    const [selectedFile, setSelectedFile] = useState<File>();\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n            const { latitude, longitude } = position.coords;\r\n\r\n            setInitialPosition([latitude, longitude]);\r\n        })\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        api.get('items').then(response =>{\r\n            setItems(response.data);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        axios.get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados')\r\n        .then(response => {\r\n            const ufInitials = response.data.map(uf => uf.sigla);\r\n\r\n            setUfs(ufInitials);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(selectedUf === '0'){\r\n            return;\r\n        }\r\n\r\n        axios.get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`)\r\n        .then(response => {\r\n            const cityNames = response.data.map(city => city.nome);\r\n\r\n            setCities(cityNames);\r\n        })\r\n\r\n    }, [selectedUf]);\r\n\r\n    function handleSelectUf(event: ChangeEvent<HTMLSelectElement> ){    \r\n        const uf = event.target.value;\r\n\r\n        setSelectedUf(uf);\r\n    }\r\n\r\n    function handleSelectCity(event: ChangeEvent<HTMLSelectElement> ){    \r\n        const city = event.target.value;\r\n\r\n        setSelectedCity(city);\r\n    }\r\n\r\n    function handleMapClick(event: LeafletMouseEvent){\r\n        setSelectedPosition([\r\n            event.latlng.lat,\r\n            event.latlng.lng\r\n        ])\r\n    } \r\n\r\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>){\r\n\r\n        const { name, value } = event.target;\r\n\r\n        setFormData({...formData, [name]:value });\r\n    }\r\n\r\n    function handleSelectItem(id: number){\r\n        const alreadySelected = selectedItems.findIndex(item => item === id);\r\n\r\n        if (alreadySelected >= 0){\r\n            const filteredItems = selectedItems.filter(item => item !== id);\r\n\r\n            setSelectedItems(filteredItems);\r\n        }\r\n        else{\r\n            setSelectedItems([ ...selectedItems, id]);\r\n        }        \r\n    }\r\n\r\n    async function handleSubmit(event: FormEvent){\r\n        event.preventDefault();\r\n\r\n        const { name, email, whatsapp } = formData;\r\n        const uf = selectedUf;\r\n        const city = selectedCity;\r\n        const [latitude, longitude] = selectedPosition;\r\n        const items = selectedItems;\r\n\r\n        const data = new FormData();\r\n\r\n        data.append('name', name);\r\n        data.append('email', email);\r\n        data.append('whatsapp', whatsapp);\r\n        data.append('uf', uf);\r\n        data.append('city', city);\r\n        data.append('latitude', String( latitude));\r\n        data.append('longitude', String(longitude));\r\n        data.append('items', items.join(','));\r\n\r\n        if(selectedFile){ \r\n            data.append('image', selectedFile);\r\n        }\r\n\r\n        \r\n        await api.post('points', data);\r\n\r\n        alert('Ponto de coleta criado!');\r\n\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div id=\"page-create-point\">\r\n            <header>\r\n                <img src={logo} alt=\"Ecoleta\" />\r\n\r\n                <Link to=\"/\">\r\n                    <FiArrowLeft />\r\n                    Voltar para home\r\n                </Link>\r\n            </header>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <h1>Cadastro do <br /> ponto de coleta</h1>\r\n\r\n                <Dropzone onFileUploaded={setSelectedFile} />\r\n\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>Dados</h2>\r\n                    </legend>\r\n\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"name\">Nome da entidade</label>\r\n                        <input type=\"text\" name=\"name\" id=\"name\" onChange={handleInputChange} />\r\n                    </div>\r\n\r\n                    <div className=\"field-group\">\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                            <input type=\"email\" name=\"email\" id=\"email\" onChange={handleInputChange} />\r\n                        </div>\r\n\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"whatsapp\">Whatsapp</label>\r\n                            <input type=\"text\" name=\"whatsapp\" id=\"whatsapp\" onChange={handleInputChange} />\r\n                        </div>\r\n                    </div>\r\n\r\n                </fieldset>\r\n\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>Endere√ßo</h2>\r\n                        <span>Selecione o endere√ßo no mapa</span>\r\n                    </legend>\r\n\r\n                    <Map center={initialPosition} zoom={17} onclick={handleMapClick}>\r\n                        <TileLayer\r\n                            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                        <Marker position={selectedPosition} />\r\n                    </Map>\r\n\r\n                    <div className=\"field-group\">\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"uf\">Estado (UF)</label>\r\n                            <select name=\"uf\" id=\"uf\" value={selectedUf} onChange={handleSelectUf}>\r\n                                <option value=\"0\" disabled>Selecione uma UF</option>\r\n                                {ufs.map(uf => (\r\n                                    <option key={uf} value={uf}>{uf}</option>\r\n                                ))}                                \r\n                            </select>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"city\">Cidade</label>\r\n                            <select name=\"city\" id=\"city\" value={selectedCity} onChange={handleSelectCity}>\r\n                                <option value=\"0\" disabled>Selecione uma cidade</option>\r\n                                {cities.map(city => (\r\n                                    <option key={city} value={city}>{city}</option>\r\n                                ))}                         \r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>√çtens de coleta</h2>\r\n                        <span>Selecione um ou mais √≠tens abaixo</span>\r\n                    </legend>\r\n\r\n                    <ul className=\"items-grid\">\r\n                        {items.map(item => (\r\n                             <li key={item.id} onClick={() => handleSelectItem(item.id)}\r\n                             className={selectedItems.includes(item.id) ? 'selected': '' }>\r\n                             <img src={item.image_url} alt={item.title} />\r\n                             <span>{item.title}</span>\r\n                         </li>\r\n                        ))}\r\n                       \r\n                    </ul>\r\n                </fieldset>\r\n                <button type=\"submit\">Cadastrar ponto de coleta</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreatePoint;","import React from 'react';\r\nimport { Route, BrowserRouter } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home';\r\nimport CreatePoint from './pages/CreatePoint';\r\n\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n        <Route component={Home} path=\"/\" exact />\r\n        <Route component={CreatePoint} path=\"/create-point\" />\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport './App.css';\n\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}